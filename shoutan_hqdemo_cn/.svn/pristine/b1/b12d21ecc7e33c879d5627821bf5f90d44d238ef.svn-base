<?php
namespace HQ\Controller;
/**
 * 
 * @author HeQi, info@heqi.hk
 */
class BannerpositionController extends BaseController {

    //模型配置, 1. label, 2. tips 3. type, 4. data source, 5. special logic
    private $tca = array();
    public $tbName = 'banner_position';  // 'banner_position';		//MODULE_NAME
    //高级筛选
    public $status_all = array(
        array('status'=>'hidden', 'value'=>0, 'title'=>'显示', 'class'=>'success'),
        array('status'=>'hidden', 'value'=>1, 'title'=>'隐藏', 'class'=>'inverse')
    );
	//广告位类型 后面可以添加自定义广告位(不受id限制)
	public $type = array(
		'0'=>array(0,'普通'),
		'1'=>array(1,'首页推荐广告位'),
	);

    //需要搜索的字段，以数组列出来
    /* private $searchKey =  array();
      private $searchKey[0] = "id";
      private $searchKey[1] = "name";
     */

    protected function init() {
        //高级筛选
        $this->assign('status_all', $this->status_all);
        if (ACTION_NAME == 'edit') {
            $id = $this->_get('id');
            $current = M($this->tbName)->where('id = ' . $id)->getField('parent_id');
        } else {
            $current = $this->_get('category');
        }

        $categories = $this->getCategoryTree(0, $current, $this->tbName);
        $this->assign('category', $categories);


        //Demo状态下仅标题字段存在于数据库, 其它字段为示例
        $this->tca = array(
            'hidden' => array(
                'label' => '显示',
                'type' => 'toggle_button',
                'data' => '0' //checkbox value
            ),
            'sorting' => array(
                'label' => '排列顺序',
                'type' => 'text'
            ),
            'name' => array(
                'label' => '位置标题',
                'type' => 'text',
                'required' => true
            ),
            'parent_id' => array(
                'label' => '所属位置',
                'type' => 'select_tree',
                'data' => $categories
            ),
            'width' => array(
                'label' => '位置宽度',
                'type' => 'text'
            ),
            'height' => array(
                'label' => '位置高度',
                'type' => 'text'
            ),
            'remark' => array(
                'label' => '位置备注',
                'type' => 'textarea'
            ),
        );
    }

    /*
     * 列表页面
     */

    public function index() {
        $this->init(); //加载初始化数据
        import('@.Util.Page'); // 导入分页类
        $Obj = D($this->tbName); //实例化对象
        $Where = "deleted=0";
        //高级搜索 数据状态
        $Where_status = ' and ( ';
        $Where_status_info = '';
        foreach($this->status_all as $k=>$v){
            if(I('request.'.$v['status'])!=''){
                $I_status = I('request.'.$v['status']);
                if(in_array($v['value'], $I_status)){
                    $Where_status_info .= " or `".$v['status']."`='".$v['value']."' ";
                }
            }
        }
        if($Where_status_info==''){
            unset($Where_status);
        }else{
            $Where_status .= substr($Where_status_info, 3).' ) ';
            $Where .= $Where_status;
        }
        if (I('request.keyword')!='') {
            $I_keyword = trim(I('request.keyword'));
            $Where .= " and name like '%" . $I_keyword . "%'";
        }

        $category = I('request.category');
        if ($category) {
            $ids = array();
            $rs = $this->getPathAndClass($category, 'banner_position', true);
            if (count($rs)) {
                foreach ($rs as $v) {
                    $ids[] = $v['id'];
                }

                $ids = implode(',', $ids);
                $Where .= " and (parent_id in (" . $ids . ") OR id = " . $category . ")";
            }
        }
        //控制分页显示条数
        if(I('post.limit_num')!=''){
            session('page_limit_num', I('post.limit_num'));
        }
        //控制列表排序
        $sorting = I('get.sorting') ? I('get.sorting') : 'id';
        $order = I('get.order') ? I('get.order') : 'desc';
        $limit_num = $_SESSION['page_limit_num'] ? $_SESSION['page_limit_num'] : 10;
        $Page = new \HQ\Util\Page($Obj->where($Where)->count(), $limit_num); // 实例化分页类 传入总记录数和每页显示的记录数
        $list = $Obj->where($Where)->order($sorting.' '.$order)->limit($Page->firstRow . ',' . $Page->listRows)->select();
        $this->assign('list', $list); // 赋值数据集
        $this->assign('page', $Page->show()); // 分页显示输出
        $this->display(); // 输出模板
    }

    /**
     * 编辑数据
     */
    public function edit() {
        $this->save();
    }

    /**
     * 保存数据
     */
    public function save() {
    	 $this->init();
        //编辑数据
        $id = I('request.id') ? I('request.id') : null;
        $info = M($this->tbName)->where('id = ' . $id)->find();

        if (IS_POST) {
            foreach ($_POST as $key => $val) {
                //处理POST数据
                if (is_array($val)) {
                    $_POST[$key] = implode(",", $val);
                }
                if (@$this->tca[$key]['required'] && !$val) {
                    $this->error($this->tca[$key]['label'] . '是必填项!');
                }
            }

            if ($id) {
                $ids = $this->getPathAndClass($id, 'banner_position', true);
                foreach ($ids as $v) {
                    if (I('post.parent_id') == $v['id']) {
                        $this->error('所选择的上级分类不能是当前分类或者当前分类的下级分类！');
                        exit;
                    }
                }
            }

            $Obj = D($this->tbName);
            $result = $Obj->create();
            if (!$result) {
                $this->error($Obj->getError());
            } else {
                if (!isset($_POST['hidden'])) {
                    $Obj->hidden = 1;
                }
                /*if (!isset($_POST['top'])) {
                    $Obj->top = 0;
                }
                if (!isset($_POST['hot'])) {
                    $Obj->hot = 0;
                }*/
                $Obj->tstamp = time();
                if ($id) {
                    $Obj->where(array('id' => $id))->save();
                    $message = '编辑成功!';
                } else {
                    $Obj->crdate = time();

                    $id = $Obj->add();
                    if (trim($_POST['sorting']) == '') {
                        $Obj->where(array('id' => $id))->save(array('sorting' => $id));
                    }
                    $message = '添加成功!';
                }
                $this->success($message, U(CONTROLLER_NAME . '/index', 'kept=1'));
                exit;
            }
        }
        //自动渲染字段
       
        parent::autoFields($this->tca, $info);
        $this->display('info');
    }
    public function updateBannerTotal(){
        $tb_name = 'Banner';
        $this->updateFieldTotal($tb_name, true, true, $field = 'position');
        $this->redirect(CONTROLLER_NAME.'/index');
    }

}

?>