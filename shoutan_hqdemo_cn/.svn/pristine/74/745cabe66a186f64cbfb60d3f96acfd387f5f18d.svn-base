<?php
namespace HQ\Controller;
/**
 *
 * @author HeQi, info@heqi.hk
 */
class ShippingController extends BaseController {

    //模型配置, 1. label, 2. tips 3. type, 4. data source, 5. special logic
    private $tca = array();
    public $tbName = CONTROLLER_NAME;  //CONTROLLER_NAME
    //高级筛选
    public $status_all = array(
        array('status'=>'hidden', 'value'=>0, 'title'=>'显示', 'class'=>'success'),
        array('status'=>'hidden', 'value'=>1, 'title'=>'隐藏', 'class'=>'inverse')
    );

    protected function init() {
        //高级筛选
        $this->assign('status_all', $this->status_all);
        //分类数据
        $userLevel = M('user_level')->where(array('deleted' => 0))->select();
        foreach ($userLevel as $key => $val) {
            $userLevel[$key] = array($val['id'], $val['id'] . "." . $val['name']);
        }
        
        $this->assign('level', $userLevel);

        //Demo状态下仅标题字段存在于数据库, 其它字段为示例
        $this->tca = array(
            'hidden' => array(
                'label' => '显示',
                'type' => 'toggle_button',
                'data' => '0' //checkbox value
            ),
            'name' => array(
                'label' => '物流公司名',
                'type' => 'text',
                'required' => true
            ),
            'code' => array(
                'label' => '公司代码',
                'type' => 'text'
            ),			
            'tel' => array(
                'label' => '电话号码',
                'type' => 'text',
                'required' => true
            ),
             'invoice_url' => array(
                'label' => '查询网址',
                'type' => 'text'
            ),
            'startup_costs' => array(
                'label' => '起步费用',
                'type' => 'text'
            ),
            /*'insure' => array(
                'label' => '保价费用',
                'type' => 'text',
                'help' => '单位元，或者是百分数，该值直接输出为保价费用'
            ),*/
            'support_cod' => array(
                'label' => '货到付款',
                'type' => 'radio',
                'data' => array(array(0, '不支持'), array(1, '支持'))
            ),
            'remark' => array(
                'label' => '配送描述',
                'type' => 'textarea',
            ),
        );
    }

    /*
     * 列表页面
     */

    public function index() {
        $this->init(); //加载初始化数据
        import('@.Util.Page'); // 导入分页类
        $Obj = D($this->tbName); //实例化对象
        $Where = "deleted=0";

        //高级搜索 数据状态
        $Where_status = ' and ( ';
        $Where_status_info = '';
        foreach($this->status_all as $k=>$v){
            if(I('request.'.$v['status'])!=''){
                $I_status = I('request.'.$v['status']);
                if(in_array($v['value'], $I_status)){
                    $Where_status_info .= " or `".$v['status']."`='".$v['value']."' ";
                }
            }
        }
        if($Where_status_info==''){
            unset($Where_status);
        }else{
            $Where_status .= substr($Where_status_info, 3).' ) ';
            $Where .= $Where_status;
        }
        $keyword = trim(I('request.keyword'));
        if ($keyword!='') {
            $Where .= " and (id='" . $keyword . "' or name like '%" . $keyword . "%' or tel like '%" . $keyword . "%' or code like '%" . $keyword . "%')";
        }

        // 注册时间
        if($starttime = I('get.starttime')){
            $Where .=' and (crdate >= ' . strtotime($starttime) . ')';
        }
        if($endtime = I('get.endtime')){
            $Where .=' and (crdate <= ' . strtotime($endtime . ' 23:59:59') . ')';
        }

        //控制列表排序
        $sorting = I('get.sorting') ? I('get.sorting') : 'id';
        $order = I('get.order') ? I('get.order') : 'desc';
        $limit_num = $_SESSION['page_limit_num'] ? $_SESSION['page_limit_num'] : 10;
        
        $Page = new \HQ\Util\Page($Obj->where($Where)->count(), $limit_num); // 实例化分页类 传入总记录数和每页显示的记录数
        $list = $Obj->where($Where)->order($sorting.' '.$order)->limit($Page->firstRow . ',' . $Page->listRows)->select();

        $this->assign('list', $list); // 赋值数据集
        $this->assign('page', $Page->show()); // 分页显示输出
        $this->display(); // 输出模板
    }

    /**
     * 编辑数据
     */
    public function edit() {
        $this->save();
    }

    /**
     * 保存数据
     */
    public function save() {
        $this->init();
        //编辑数据
        $id = I('request.id', null);
        $info = M($this->tbName)->where('id = ' . $id)->find();

        if (IS_POST) {
            // 必填
            foreach ($_POST as $key => $val) {
                //处理POST数据
                if (is_array($val)) {
                    $_POST[$key] = implode(",", $val);
                }
                if (@$this->tca[$key]['required'] && !$val) {
                    $this->error($this->tca[$key]['label'] . '是必填项!');
                }
            }

            $Obj = D($this->tbName);
            $result = $Obj->create();
            if (!$result) {
                $this->error($Obj->getError());
            } else {
                if (!isset($_POST['hidden'])) {
                    $Obj->hidden = 1;
                }

                $Obj->tstamp = time();
                if ($id) {
                    $Obj->where(array('id' => $id))->save();
                    $message = '编辑成功!';
                } else {
                    $Obj->crdate = time();
                    $id = $Obj->add();
                    $message = '添加成功!';
                }

                $this->success($message, U(CONTROLLER_NAME.'/index'));
                exit;
            }
        }
        //自动渲染字段
        parent::autoFields($this->tca, $info);
        $this->display('info');
    }

    /**
     * 重载删除方法
     * @param null $id 需要删除的记录id
     */
    public function del($id = NULL) {
        $tbName = $this->tbName != '' ? $this->tbName : CONTROLLER_NAME;

        $id = $id == NULL ? I('get.id') : $id;
        $is_del = 1;
        $rs = false;

        if ($is_del == 0) {
            $info = M($tbName)->where('id = ' . $id)->find();
            if ($info['image'] || $info['flash_file']) {
                $this->delFile($info);
            }
            if ($info['category'] && M($tbName . '_category')) {
                $this->updateCategorySum($info['category'], $tbName, 'del', true);
            }

            if (M($tbName)->where('id = ' . $id)->delete()) {
                $shiping_config = M('bc_shiping_config')->where('shiping_id = ' . $id)->getField('id');
                M('bc_shiping_config')->where('shiping_id = ' . $id)->delete();
                M('bc_shiping_area')->where('config_id = ' . $shiping_config)->delete();
                $rs = true;
            }
        } else {
            if (M($tbName)->where('id = ' . $id)->save(array('deleted' => 1))) {
                $shiping_config = M('bc_shiping_config')->where('shiping_id = ' . $id)->getField('id');
                M('bc_shiping_config')->where('shiping_id = ' . $id)->save(array('deleted' => 1));
                M('bc_shiping_area')->where('config_id = ' . $shiping_config)->save(array('deleted' => 1));
                $rs = true;
            }
        }

        if ($rs) {
            $this->success('删除成功!', U(CONTROLLER_NAME . '/index', 'kept=1'));
        } else {
            $this->error('删除失败，请稍后再试！');
        }
    }
}

?>