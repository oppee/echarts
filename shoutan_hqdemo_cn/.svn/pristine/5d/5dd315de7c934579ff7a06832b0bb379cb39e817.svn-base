<?php
namespace HQ\Controller;
/**
 * 
 * @author HeQi, info@heqi.hk
 */
class GoodsintegralController extends BaseController {

    //模型配置, 1. label, 2. tips 3. type, 4. data source, 5. special logic
    private $tca = array();
    private $status = array(
        array(1, '显示'),
        array(2, '隐藏'),
        array(3, '推荐'),
        array(4, '未推'),
        array(5, '置顶'),
        array(6, '未顶'),
    );
    public $tbName = 'goods_integral';
    public $image_path = '';
    public $thumb_path = '';
    public $material = array();
    public $taste = array();
    //高级筛选
    public $status_all = array(
        array('status'=>'hidden', 'value'=>0, 'title'=>'显示', 'class'=>'success'),
        array('status'=>'hidden', 'value'=>1, 'title'=>'隐藏', 'class'=>'inverse'),
        array('status'=>'hot', 'value'=>1, 'title'=>'推荐', 'class'=>'success'),
        array('status'=>'hot', 'value'=>0, 'title'=>'未推', 'class'=>'inverse'),
        array('status'=>'top', 'value'=>1, 'title'=>'置顶', 'class'=>'success'),
        array('status'=>'top', 'value'=>0, 'title'=>'未顶', 'class'=>'inverse'),
    );

    protected function init() {
        //高级筛选
        $this->assign('status_all', $this->status_all);

        //分类关联
        $categories = '';
        $current = '';
        $multiple = array();
        if (ACTION_NAME == 'edit') {
            $id = $this->_get('id');
            $info = M($this->tbName)->where('id = ' . $id)->find();

            //图片路径
            $this->image_path = $this->thumb_path = 'Goodsintegral/source/' . date('Ym', $info['crdate']) . '/';
            if ($this->Config['thumb_width']) {
                $this->thumb_path ='Goodsintegral/thumb_0/' . date('Ym', $info['crdate']) . '/';
            }

            //批量图片
            $data = array(
                'info_tab' => CONTROLLER_NAME,
                'info_id' => $id
            );
            $multiple = M('Attach')->where($data)->select();

            if (count($multiple)) {
                foreach ($multiple as $k => $v) {
                    $multiple[$k]['path'] = __ROOT__ . '/' . $this->Config['path_upload'] . 'Goodsintegral/attach/' . date('Ym', $v['crdate']) . '/' . $v['path'];
                }
            }
        }

        //筛选条件-显示状态
        $this->assign('status', $this->status);
        //配置字段
        $this->tca = array(
            'hidden' => array(
                'label' => '显示',
                'type' => 'toggle_button',
                'data' => '0' //checkbox value
            ),
            'hot' => array(
                'label' => '是否推荐',
                'type' => 'toggle_button',
                'data' => '1'
            ),
            'top' => array(
                'label' => '是否置顶',
                'type' => 'toggle_button',
                'data' => '1'
            ),
            'sorting' => array(
                'label' => '排列顺序',
                'type' => 'text',
                'data' => '0'
            ),
            'hit' => array(
                'label' => '访问次数',
                'type' => 'text',
                'data' => '0'
            ),
            /*'start_time' => array(
                'label' => '上架时间*',
                'type' => 'datetime',
                'mode' => 'datetime',
				'required' => true
            ),
            'end_time' => array(
                'label' => '下架时间*',
                'type' => 'datetime',
                'mode'=> 'datetime',
				'required' => true
            ),*/
            'title' => array(
                'label' => '商品标题',
                'type' => 'text',
                'required' => true
            ),
            'market_price' => array(
                'label' => '市场价',
                'type' => 'text',
                'required' => true
            ),
           'price' => array(
                'label' => '会员价',
                'type' => 'text'
            ),
            'sheep_price' => array(
                'label' => '羊币价',
                'type' => 'text'
            ),
            'integral' => array(
                'label' => '需要积分',
                'type' => 'text',
				'required' => true
            ),
            'stock' => array(
                'label' => '库存',
                'type' => 'text'
            ),
            'image' => array(
                'label' => '商品图片',
                'type' => 'image'
            ),
            'postage' => array(
                'label' => '包裹信息',
                'type' => 'text',
                'help' => '如：满99包邮,付款后48小时内收货 '
            ),
            'remark' => array(
                'label' => '商品摘要',
                'type' => 'textarea'
            ),
            'content' => array(
                'label' => '详细内容',
                'type' => 'rte',
                'class' => 'all'
            ),
            'multiple' => array(
                'label' => '多图片上传',
                'type' => 'multiple',
                'data' => $multiple
            ),
        );
    }

    /*
     * 列表页面
     */

    public function index() {
        $this->init();
        $Obj = D($this->tbName); //实例化对象
        $Where = "deleted=0";

        //高级搜索 数据状态
        $Where_status = ' and ( ';
        $Where_status_info = '';
        foreach($this->status_all as $k=>$v){
            if(I('request.'.$v['status'])!=''){
                $I_status = I('request.'.$v['status']);
                if(in_array($v['value'], $I_status)){
                    $Where_status_info .= " or `".$v['status']."`='".$v['value']."' ";
                }
            }
        }
        if($Where_status_info==''){
            unset($Where_status);
        }else{
            $Where_status .= substr($Where_status_info, 3).' ) ';
            $Where .= $Where_status;
        }

        if (I('request.keyword')!='') {
            $I_keyword = trim(I('request.keyword'));
            $Where .=' and (id LIKE "%' . $I_keyword . '%" OR title LIKE "%' . $I_keyword . '%")';
        }

        //控制分页显示条数
        if(I('post.limit_num')!=''){
            session('page_limit_num', I('post.limit_num'));
        }
        //控制列表排序
        $sorting = I('get.sorting') ? I('get.sorting') : 'stock';
        $order = I('get.order') ? I('get.order') : 'asc';
        $limit_num = $_SESSION['page_limit_num'] ? $_SESSION['page_limit_num'] : 10;
        $Page = new \HQ\Util\Page($Obj->where($Where)->count(), $limit_num); // 实例化分页类 传入总记录数和每页显示的记录数
        $list = $Obj->where($Where)->order($sorting.' '.$order)->limit($Page->firstRow . ',' . $Page->listRows)->select();

        $this->assign('list', $list); // 赋值数据集
        $this->assign('page', $Page->show()); // 分页显示输出
        $this->display(); // 输出模板
    }

    /**
     * 编辑数据
     */
    public function edit() {
        $this->save();
    }
    /**
     * 保存数据
     */
    public function save() {
        $this->init();
        //编辑数据
        $id = I('request.id') ? I('request.id') : null;
        $info = M($this->tbName)->where('id = ' . $id)->find();

        if (IS_POST) {
            $_POST['start_time'] = strtotime($_POST['start_time']);
            $_POST['end_time'] = strtotime($_POST['end_time']);
            foreach ($_POST as $key => $val) {
                //处理POST数据
                if (is_array($val)) {
                    $_POST[$key] = implode(",", $val);
                }
                if (@$this->tca[$key]['required'] && !$val) {
                    $this->error($this->tca[$key]['label'] . '是必填项!');
                }
            }
            
            //处理图片的宽度和高度
            $thumb_width = $this->Config['goodsintegral_thumb_width']?$this->Config['goodsintegral_thumb_width']:$this->Config['thumb_width'];
            $thumb_height = $this->Config['goodsintegral_thumb_height']?$this->Config['goodsintegral_thumb_height']:$this->Config['thumb_height'];
            //删除文件 begin **********************************
            $path = $this->Config['path_upload'] . CONTROLLER_NAME . '/';

            if ($info && $info['image'] && $_POST['delete_image'] == '1') {
                if (trim($thumb_width) != '') {
                    foreach (explode(',', $thumb_width) as $k => $v) {
                        $thumb = $path . 'thumb_' . $k . '/' . date('Ym', $info['crdate']) . '/' . $info['image'];
                        if (is_file($thumb)) {
                            unlink($thumb);
                        }
                    }
                }

                $file_path = $path . 'source/' . date('Ym', $info['crdate']) . '/';
                $this->delInfoFile($file_path, $info['image']);
            } else {
                unset($_POST['image']);
            }
            //删除文件 end **********************************
            //文件上传 begin **********************************
            if (count($_FILES) && isset($_FILES['image'])) {
                $save_path = 'source/'; // 设置附件上传目录
                $extent_path = ($info['crdate'] ? date('Ym', $info['crdate']) : date('Ym')) . '/';
                $upload = $this->uploadFile('image', $path, $save_path, $extent_path, $thumb_width, $thumb_height);

                if (is_array($upload) && $upload['upload']) {
                    $_POST['image'] = $upload['info'];
                } else {
                    $this->error($upload['info']);
                }
            }

            //文件上传 end **********************************

            $Obj = D($this->tbName);
            $result = $Obj->create();
            if (!$result) {
                $this->error($Obj->getError());
            } else {
                if (!isset($_POST['hidden'])) {
                    $Obj->hidden = 1;
                }
                if (!isset($_POST['top'])) {
                    $Obj->top = 0;
                }
                if (!isset($_POST['hot'])) {
                    $Obj->hot = 0;
                }

                if ($id) {
                    $Obj->tstamp = time();
                    $Obj->where(array('id' => $id))->save();
                    $message = '编辑成功!';
                } else {
                    $Obj->crdate = time();
                    $Obj->tstamp = time();
                    $id = $Obj->add();
                    if (trim($_POST['sorting']) == '') {
                        $Obj->where(array('id' => $id))->save(array('sorting' => $id));
                    }

                    $message = '添加成功!';
                }

                //多文件上传 begin
                if (isset($_POST['multiple'])) {
                    $multiple = explode(',', $_POST['multiple']);
                    foreach ($multiple as $file) {
                        if ($file) {
                            $file = explode('/', trim($file));
                            if (empty($file[0]) || empty($file[1])){
                                continue;
                            }
                            
                            $file_info = array(
                                'tstamp' => time(),
                                'crdate' => time(),
                                'title' => substr($file[1], 0, strrpos($file[1], '.')),
                                'info_id' => $id,
                                'info_tab' => CONTROLLER_NAME,
                                'path' => $file[0],
                            );

                            M('Attach')->add($file_info);
                        }
                    }
                }

                $this->success($message, U(CONTROLLER_NAME . '/index', 'kept=1'));
                exit;
            }
        }
        //自动渲染字段
        parent::autoFields($this->tca, $info);
        $this->assign('Multiple', true);
        $this->display('info');
    }

}

?>