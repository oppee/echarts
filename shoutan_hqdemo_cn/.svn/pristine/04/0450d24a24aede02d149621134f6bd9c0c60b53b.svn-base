<?php
namespace HQ\Controller;
/**
 *
 * @author HeQi, info@heqi.hk
 */
class GoodsController extends BaseController {

    //模型配置, 1. label, 2. tips 3. type, 4. data source, 5. special logic
    private $tca = array();
    private $status = array(
        array(1, '显示'),
        array(2, '隐藏'),
        array(3, '推荐'),
        array(4, '未推'),
        array(5, '置顶'),
        array(6, '未顶'),
    );
    public $tbName = CONTROLLER_NAME;
    public $image_path = '';
    public $thumb_path = '';
    public $material = array();
    public $taste = array();
    //高级筛选
    public $status_all = array(
        array('status'=>'hidden', 'value'=>0, 'title'=>'显示', 'class'=>'success'),
        array('status'=>'hidden', 'value'=>1, 'title'=>'隐藏', 'class'=>'inverse'),
        array('status'=>'hot', 'value'=>1, 'title'=>'推荐', 'class'=>'success'),
        array('status'=>'hot', 'value'=>0, 'title'=>'未推', 'class'=>'inverse'),
        array('status'=>'top', 'value'=>1, 'title'=>'置顶', 'class'=>'success'),
        array('status'=>'top', 'value'=>0, 'title'=>'未顶', 'class'=>'inverse'),
    );

    protected function init() {
        //高级筛选
        $this->assign('status_all', $this->status_all);

        $shuxings = '';
        //商品规格
        $guiges = M('attribute')->where('deleted=0 and parent_id=2')->field('id as "0",concat_ws(".",id,name) as "1"')->select();
        $this->assign('guiges', $guiges);
        //商品属性
        $shuxings = M('attribute')->where('deleted=0 and parent_id=1')->field('id as "0",concat_ws(".",id,name) as "1"')->select();
        $this->assign('shuxings', $shuxings);

        //分类关联
        $categories = '';
        $current = '';
        $multiple = array();
        if (ACTION_NAME == 'edit') {
            $id = $this->_get('id');
            $info = M(CONTROLLER_NAME)->where('id = ' . $id)->find();

            $current = $info['category'];
            if ($id != '') {
                $user_id = M(CONTROLLER_NAME)->where(array('deleted' => 0, 'id' => $id))->getField('user_id');
                $users = M('User')->where(array('deleted' => 0, 'id' => $user_id))->getField('username');
                $users = array(array(0, $users));
            } else {
                $users = M('User')->where(array('deleted' => 0))->select();
                foreach ($users as $key3 => $val3) {
                    $users[$key3] = array($val3['id'], $val3['id'] . "." . $val3['username']);
                }
            }

            //图片路径
            $this->image_path = $this->thumb_path = CONTROLLER_NAME . '/source/' . date('Ym', $info['crdate']) . '/';
            if ($this->Config['thumb_width']) {
                $this->thumb_path = CONTROLLER_NAME . '/thumb_0/' . date('Ym', $info['crdate']) . '/';
            }

            //批量图片
            $data = array(
                'info_tab' => CONTROLLER_NAME,
                'info_id' => $id
            );
            $multiple = M('Attach')->where($data)->select();

            if (count($multiple)) {
                foreach ($multiple as $k => $v) {
                    $multiple[$k]['path'] = __ROOT__ . '/' . $this->Config['path_upload'] . 'Goods/attach/' . date('Ym', $v['crdate']) . '/' . $v['path'];
                }
            }
			
        } else {
            $current = $this->_get('category');
        }

        $categories = $this->getCategoryTree(0, $current, 'Goods_category');
        $this->assign('category', $categories);

        $brand = M('Brand')->where(array('deleted' => 0))->field('id as "0",concat_ws(".",id,name) as "1"')->select();
        $this->assign('brand', $brand);
		$supplier = M('supplier')->limit()->select();
		foreach($supplier as $k => $v){
			$supplier[$k] = array($v['id'],$v['id']. "." . $v['company']. "-" . $v['name']);
		}
		$this->assign('supplier', $supplier); 

        //筛选条件-显示状态
        $this->assign('status', $this->status);
        //配置字段
        $this->tca = array(
            'hidden' => array(
                'label' => '是否显示',
                'type' => 'toggle_button',
                'data' => '0' //checkbox value
            ),
			'is_online' => array(
				'label' => '是否上架',
				'type' => 'radio',
				'required' => true,
				'default' => 0,
				'data' => array(array(0,'上架'),array(1,'下架'))
			),				
			 
			/*'hot' => array(
                'label' => '是否推荐',
                'type' => 'toggle_button',
                'data' => '1'
            ),*/
           /* 'top' => array(
                'label' => '是否置顶',
                'type' => 'toggle_button',
                'data' => '1'
            ),
            'sorting' => array(
                'label' => '排列顺序',
                'type' => 'text',
                'data' => '0'
            ),*/
           /* 'hit' => array(
                'label' => '访问次数',
                'type' => 'text',
                'data' => '0'
            ),*/

            'title' => array(
                'label' => '商品标题',
                'type' => 'text',
                'required' => true
            ),
            /*'number' => array(
                'label' => '商品编号',
                'type' => 'text',
            ),*/
            'category' => array(
                'label' => '所属分类',
                'type' => 'select_tree',
                'data' => $categories,
                'required' => true
            ),
			'is_activity' => array(
				'label' => '参加活动',
				'type' => 'radio',
				//'required' => true,
				'default' => 0,
				'data' => array(array(0,'不参加'),array(1,'促销'),array(2,'竞价'))
			),	
            'sales_price' => array(
                'label' => '促销价格',
                'type' => 'text',
                'required' => true,
				'prefix' => '￥',
            ),
            'race_price' => array(
                'label' => '商品竞价',
                'type' => 'text',
                'required' => true,
				'prefix' => '￥',
            ),	

            'start_time' => array(
                'label' => '竞开始时间',
                'type' => 'datetime',
                'mode' => 'datetime',
				'help'=> '竞价开始时间',
            ),
            'end_time' => array(
                'label' => '竞结束时间',
                'type' => 'datetime',
                'mode'=> 'datetime',
				'help'=> '竞价结束时间',
            ),
            /* 'multiprice' => array(
                'label' => '提货价格',
                'type' => 'multiprice',
                'key' => '提货时间',
                'value' => '提货价格'
            ), */		
            /*'brand' => array(
                'label' => '所属品牌',
                'type' => 'select2',
                'data' => $brand
            ),*/
            'guige' => array(
				'label' => '商品规格',
				'type' => 'text',
			),
            /*'market_price' => array(
                'label' => '市场价',
                'type' => 'text',
                'required' => true
            ),*/
            'price' => array(
                'label' => '商品价格',
                'type' => 'text',
                'required' => true,
				'prefix' => '￥',
            ),
 
            'stock' => array(
                'label' => '商品库存',
                'type' => 'text'
            ),
           /* 'sell_num' => array(
                'label' => '商品销量',
                'type' => 'text'
            ),*/
            'image' => array(
                'label' => '商品图片',
                'type' => 'image'
            ),
 		
            'remark' => array(
                'label' => '商品摘要',
                'type' => 'textarea'
            ),
            'description' => array(
                'label' => '商品详细',
                'type' => 'rte',
                'class' => 'all'
            ),
            'multiple' => array(
                'label' => '多图片上传',
                'type' => 'multiple',
                'data' => $multiple,
				'helpinfo' => '请上传640*640尺寸的图片'
            )
        );
    }

    /*
     * 列表页面
     */

    public function index() {
        $this->init();
        $Obj = D(CONTROLLER_NAME); //实例化对象
        $Where = "deleted=0";

        //高级搜索 数据状态
        $Where_status = ' and ( ';
        $Where_status_info = '';
        foreach($this->status_all as $k=>$v){
            if(I('request.'.$v['status'])!=''){
                $I_status = I('request.'.$v['status']);
                if(in_array($v['value'], $I_status)){
                    $Where_status_info .= " or `".$v['status']."`='".$v['value']."' ";
                }
            }
        }
        if($Where_status_info==''){
            unset($Where_status);
        }else{
            $Where_status .= substr($Where_status_info, 3).' ) ';
            $Where .= $Where_status;
        }
        $category = I('request.category');
        if ($category) {
            $ids = array();
            $rs = $this->getPathAndClass($category, 'Goods_category', true);
            if (count($rs)) {
                foreach ($rs as $v) {
                    $ids[] = $v['id'];
                }

                $ids = implode(',', $ids);
                $Where .= " and category in (" . $ids . ") ";
            }
        }
        $brand = I('request.brand');
        if ($brand) {
            $Where .= " and brand ='" . $brand . "' ";
        }
        if (I('request.keyword')!='') {
            $I_keyword = trim(I('request.keyword'));
            $Where .=' and (id LIKE "%' . $I_keyword . '%" OR title LIKE "%' . $I_keyword . '%")';
        }

        //控制分页显示条数
        if(I('post.limit_num')!=''){
            session('page_limit_num', I('post.limit_num'));
        }
        //控制列表排序
        $sorting = I('get.sorting') ? I('get.sorting') : 'id';
        $order = I('get.order') ? I('get.order') : 'desc';
        $limit_num = $_SESSION['page_limit_num'] ? $_SESSION['page_limit_num'] : 10;
        $Page = new \HQ\Util\Page($Obj->where($Where)->count(), $limit_num); // 实例化分页类 传入总记录数和每页显示的记录数
        $list = $Obj->where($Where)->order($sorting.' '.$order)->limit($Page->firstRow . ',' . $Page->listRows)->select();

        $this->assign('list', $list); // 赋值数据集
        $this->assign('page', $Page->show()); // 分页显示输出
        $this->display(); // 输出模板
    }

    /**
     * 编辑数据
     */
    public function edit() {
        $this->save();
    }
    /**
     * 保存数据
     */
    public function save() {
        $this->init();
        //编辑数据
        $id = I('request.id') ? I('request.id') : null;
        $info = M(CONTROLLER_NAME)->where('id = ' . $id)->find();
		
        if (IS_POST) {
            $_POST['start_time'] = strtotime($_POST['start_time']);
            $_POST['end_time'] = strtotime($_POST['end_time']);
            

            foreach ($_POST as $key => $val) {
                //处理POST数据
                if (is_array($val)) {
                    $_POST[$key] = implode(",", $val);
                }
                if (@$this->tca[$key]['required'] && !$val) {
                    $this->error($this->tca[$key]['label'] . '是必填项!');
                }
            }

            //处理图片的宽度和高度
            $category = I('request.category');
            $cateInfo = M($this->tbName."Category")->where(array("id"=>$category))->find();
            if($cateInfo['thumb_width']!='' && $cateInfo['thumb_height']!=''){
                $thumb_width = $cateInfo['thumb_width'];
                $thumb_height = $cateInfo['thumb_height'];
            }else{
                $thumb_width = $this->Config['goods_thumb_width']?$this->Config['goods_thumb_width']:$this->Config['thumb_width'];
                $thumb_height = $this->Config['goods_thumb_height']?$this->Config['goods_thumb_height']:$this->Config['thumb_height'];
            }
            //删除文件 begin **********************************
            $path = $this->Config['path_upload'] . CONTROLLER_NAME . '/';

            if ($info && $info['image'] && $_POST['delete_image'] == '1') {
                if (trim($thumb_width) != '') {
                    foreach (explode(',', $thumb_width) as $k => $v) {
                        $thumb = $path . 'thumb_' . $k . '/' . date('Ym', $info['crdate']) . '/' . $info['image'];
                        if (is_file($thumb)) {
                            unlink($thumb);
                        }
                    }
                }

                $file_path = $path . 'source/' . date('Ym', $info['crdate']) . '/';
                $this->delInfoFile($file_path, $info['image']);
            } else {
                unset($_POST['image']);
            }
            //删除文件 end **********************************
            //文件上传 begin **********************************
            if (count($_FILES) && isset($_FILES['image'])) {
                $save_path = 'source/'; // 设置附件上传目录
                $extent_path = ($info['crdate'] ? date('Ym', $info['crdate']) : date('Ym')) . '/';
                $upload = $this->uploadFile('image', $path, $save_path, $extent_path, $thumb_width, $thumb_height);

                if (is_array($upload) && $upload['upload']) {
                    $_POST['image'] = $upload['info'];
                } else {
                    $this->error($upload['info']);
                }
            }

            //文件上传 end **********************************

            $Obj = D(CONTROLLER_NAME);
            $result = $Obj->create();
            if (!$result) {
                $this->error($Obj->getError());
            } else {
                if (!isset($_POST['hidden'])) {
                    $Obj->hidden = 1;
                }
                if (!isset($_POST['top'])) {
                    $Obj->top = 0;
                }
                if (!isset($_POST['hot'])) {
                    $Obj->hot = 0;
                }

                if ($id) {
                    $Obj->tstamp = time();
                    $Obj->where(array('id' => $id))->save();
                    $message = '编辑成功!';
                } else {
                    $this->updateCategorySum($_POST['category'], $this->tbName, 'add', true);//所有父级分类记录数刷新
                    $Obj->crdate = time();
                    $Obj->tstamp = time();
                    $id = $Obj->add();
                    if (trim($_POST['sorting']) == '') {
                        $Obj->where(array('id' => $id))->save(array('sorting' => $id));
                    }

                    $message = '添加成功!';
                }

                //多文件上传 begin
                if (isset($_POST['multiple'])) {
                    $multiple = explode(',', $_POST['multiple']);
                    foreach ($multiple as $file) {
                        if ($file) {
                            $file = explode('/', trim($file));
                            if (empty($file[0]) || empty($file[1])){
                                continue;
                            }

                            $file_info = array(
                                'tstamp' => time(),
                                'crdate' => time(),
                                'title' => substr($file[1], 0, strrpos($file[1], '.')),
                                'info_id' => $id,
                                'info_tab' => 'Goods',
                                'path' => $file[0],
                            );

                            M('Attach')->add($file_info);
                        }
                    }
                }

                $this->success($message, U(CONTROLLER_NAME . '/index', 'kept=1'));
                exit;
            }
        }

        //自动渲染字段
        parent::autoFields($this->tca, $info);
        $this->assign('Multiple', true);
        $this->display('info');
    }


    // Excel数据导入数据库
    public function import(){
        import("Heqi.Excel.PHPExcel");
        import("Heqi.Excel.PHPExcel.Reader.Excel2007");

        $savePath = $this->Config['path_upload'] . MODULE_NAME . '/Excel/';

        if (! empty ( $_FILES ['import'] ['name'] )){

            $filename = $_FILES ['import'] ['tmp_name'];

            // 开始导入
            $PHPReader = new \PHPExcel_Reader_Excel2007();

            if (!$PHPReader->canRead($filename)) {
                $PHPReader = new \PHPExcel_Reader_Excel5();
                if (!$PHPReader->canRead($filename)) {
                    $this->error('没有Excel文件！');
                    exit;
                }
            }

            $PHPExcel = $PHPReader->load($filename);

            /**Read excel file in the first worksheet*/
            $currentSheet = $PHPExcel->getSheet(0);
            //$currentSheet = $PHPExcel->getSheet(0)->toArray();

            $allColumn = $currentSheet->getHighestColumn();
            $allRow = $currentSheet->getHighestRow();

            //echo $allColumn."|".$allRow."<br />";
            $sheetData = $PHPExcel->getActiveSheet()->toArray(null, true, true, true);

            //倒序导入
            arsort($sheetData);

            //echo count($sheetData);

            /****set title begin****/
            $headerKey = array_flip($sheetData[1]);
            //echo $sheetData[2][$headerKey['Address']];
            /****set title end****/
            //print_r($sheetData);exit;
//            dump($headerKey);exit;
            //dump($sheetData);die;
            $Obj = M('Goods');
            foreach ($sheetData as $k => $v) {
                if ($k <= 1 || $v[$headerKey['所属分类*']] == '') {
                    continue;
                }
                $info['title'] = $v[$headerKey['商品标题*']]?$v[$headerKey['商品标题*']]:'';
                $info['title_name'] = $v[$headerKey['商品标题*']]?$v[$headerKey['商品别称*']]:'';
                $cate = M('Goods_category')->where("deleted = 0 and name = '".$v[$headerKey['所属分类*']]."'")->find();
                $info['category'] = $cate['id']?$cate['id']:'';
                $info['price'] = $v[$headerKey['商品价格*']]?$v[$headerKey['商品价格*']]:'';
                $info['number'] = $v[$headerKey['商品编号*']]?$v[$headerKey['商品编号*']]:'';
                $info['weight'] = $v[$headerKey['商品规格*']]?$v[$headerKey['商品规格*']]:'';
                if(!empty($v[$headerKey['上架时间*']])){
                    $start = explode('-',$v[$headerKey['上架时间*']]);
                    $info['start_time'] = strtotime($start[2].'-'.$start[0].'-'.$start[1]);
                }
                if(!empty($v[$headerKey['下架时间*']])){
                    $start = explode('-',$v[$headerKey['下架时间*']]);
                    $info['end_time'] = strtotime($start[2].'-'.$start[0].'-'.$start[1]);
                }
                $info['stock'] = $v[$headerKey['库存']]?$v[$headerKey['库存']]:'';
                $info['sell_num'] = $v[$headerKey['销量']]?$v[$headerKey['销量']]:'';
                $info['sorting'] = $v[$headerKey['排列顺序']]?$v[$headerKey['排列顺序']]:'';
                $info['crdate'] = time();
                $info['tstamp'] = time();
                $Obj->create($info);
                $id = $Obj->add();
                if (! $id){
                    $this->error ( '导入数据库失败' );
                }else{
                    // $number = date('Ymd').substr(implode(NULL, array_map('ord', str_split(substr(uniqid(), 7, 13), 1))), 0, 8);  //商品编号
                    if($info['sorting'] == ''){
                        $Obj->where(array('id' => $id))->save(array('sorting' => $id));
                    }

                }
            }

            unlink($filename);

            $this->success ( '导入成功！' );
            exit;
        }else{
            $this->error('请选择导入文件！');
        }
    }
}

?>