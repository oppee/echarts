<?php
/**
 * 创建新模块, 请复制DemoAction.class.php与主题下Demo文件夹, Demo改为新模块名. 数据库存字段请手动定义, 可参考demo.sql
 * @author HeQi, info@heqi.hk
 */
namespace HQ\Controller;
class LinksController extends BaseController
{
    //模型配置, 1. label, 2. tips 3. type, 4. data source, 5. special logic
    private $tca = array();
    public $tbName = CONTROLLER_NAME ;// 'link';		//CONTROLLER_NAME
    //高级筛选
    public $status_all = array(
        array('status'=>'hidden', 'value'=>0, 'title'=>'显示', 'class'=>'success'),
        array('status'=>'hidden', 'value'=>1, 'title'=>'隐藏', 'class'=>'inverse'),
        array('status'=>'top', 'value'=>1, 'title'=>'置顶', 'class'=>'success'),
        array('status'=>'top', 'value'=>0, 'title'=>'未顶', 'class'=>'inverse')
    );

    protected function init()
    {
        //高级筛选
        $this->assign('status_all', $this->status_all);
        
        //配置字段
        $this->tca = array(
            'hidden' => array(
                'label' => '是否显示',
                'type' => 'toggle_button',
                'data' => '0' //checkbox value
            ),
            'top' => array(
                'label' => '是否置顶',
                'type' => 'toggle_button',
                'data' => 1
            ),						
            'sorting' => array(
                'label' => '排列顺序',
                'type' => 'text'
            ),
            'title' => array(
                'label' => '链接标题',
                'help' => '',
                'type' => 'text',
                'required' => true,
                'format' => 'required'
            ),
            'url' => array(
                'label' => '链接地址',
                'help' => '',
                'type' => 'text',
                'required' => true
            ),
            'type' => array(
                'label' => '显示类型',
                'type' => 'radio',
                'data' => array(array(0, '文字'), array(1, '图片'))
            ),
            'place' => array(
                'label' => '显示位置',
                'type' => 'select',
                'data' => array(array(0, '全站'), array(1, '首页'), array(2, '内页'))
            ), //data: 可动态查询，可自定义选项

            'image' => array(
                'label' => '链接图片',
                'type' => 'image'
            ),

            'remark' => array(
                'label' => '备注',
                'help' => '',
                'type' => 'textarea'
            )
        );
    }

    /*
     * 列表页面
     */

    public function index()
    {
        $this->init();
        import('@.Util.Page'); // 导入分页类
        $Obj = D($this->tbName); //实例化对象
        $Where = "deleted=0";
        //高级搜索 数据状态
        $Where_status = ' and ( ';
        $Where_status_info = '';
        foreach($this->status_all as $k=>$v){
            if(I('request.'.$v['status'])!=''){
                $I_status = I('request.'.$v['status']);
                if(in_array($v['value'], $I_status)){
                    $Where_status_info .= " or `".$v['status']."`='".$v['value']."' ";
                }
            }
        }
        if($Where_status_info==''){
            unset($Where_status);
        }else{
            $Where_status .= substr($Where_status_info, 3).' ) ';
            $Where .= $Where_status;
        }
        if (I('request.keyword')!='') {
            $I_keyword = trim(I('request.keyword'));
            $Where .= " and (title like '%" . $I_keyword . "%' or url like '%" . $I_keyword . "%' or id like '%" . $I_keyword . "%')";
        }
        //控制分页显示条数
        if(I('post.limit_num')!=''){
            session('page_limit_num', I('post.limit_num'));
        }
        //控制列表排序
        $sorting = I('get.sorting') ? I('get.sorting') : 'id';
        $order = I('get.order') ? I('get.order') : 'desc';
        $limit_num = $_SESSION['page_limit_num'] ? $_SESSION['page_limit_num'] : 10;
        $Page = new \HQ\Util\Page($Obj->where($Where)->count(), $limit_num); // 实例化分页类 传入总记录数和每页显示的记录数
        $list = $Obj->where($Where)->order($sorting.' '.$order)->limit($Page->firstRow . ',' . $Page->listRows)->select();
        $this->assign('list', $list); // 赋值数据集
        $this->assign('page', $Page->show()); // 分页显示输出
        $this->display(); // 输出模板
    }

    /**
     * 编辑数据
     */
    public function edit() {
        $this->save();
    }

   /**
     * 保存数据
     */
    public function save() {
    	        $this->init();
        //编辑数据
        $id = I('request.id') ? I('request.id') : null;
        $info = M($this->tbName)->where('id = ' . $id)->find();
				
        if (IS_POST) {
            foreach ($_POST as $key => $val) {
                //处理POST数据
                if (is_array($val)) {
                    $_POST[$key] = implode(",", $val);
                }
                if (@$this->tca[$key]['required'] && !$val) {
                    $this->error($this->tca[$key]['label'] . '是必填项!');
                }
            }

    				 //删除文件 begin **********************************
            $path = $this->Config['path_upload'] . CONTROLLER_NAME . '/';
            if ($info && $info['image'] && $_POST['delete_image'] == '1') {
                $file_path = $path;
                $this->delInfoFile($file_path, $info['image']);
            } else {
                unset($_POST['image']);
            }
						//删除文件 end **********************************
						
						//文件上传 begin **********************************
            if (count($_FILES) && isset($_FILES['image'])) {
                $save_path = ''; // 设置附件上传目录
                $extent_path = '';
								$thumb_width = '';
								$thumb_height = '';

                $upload = $this->uploadFile('image', $path, $save_path, $extent_path, $thumb_width, $thumb_height);

                if (is_array($upload) && $upload['upload']) {
                    $_POST['image'] = $upload['info'];
                } else {
                    $this->error($upload['info']);
                }
            }
						 //文件上传 end **********************************

            $Obj = D($this->tbName);
            $result = $Obj->create();
            if (!$result) {
                $this->error($Obj->getError());
            } else {
                if (!isset($_POST['hidden'])) {$Obj->hidden = 1;}
                if (!isset($_POST['top'])) {$Obj->top = 0;}
								
								$Obj->tstamp = time();
                if ($id) {
                    $Obj->where(array('id' => $id))->save();
                    $message = '编辑成功!';
                } else {
                    $Obj->crdate = time();
                    $id = $Obj->add();
                    if (trim($_POST['sorting']) == '') {
                        $Obj->where(array('id' => $id))->save(array('sorting' => $id));
                    }
                    $message = '添加成功!';
                }

                $this->success($message, U(CONTROLLER_NAME . '/index', 'kept=1'));
                exit;
            }
        }
        //自动渲染字段
        parent::autoFields($this->tca, $info);
        $this->display('info');
    }
		

}

?>