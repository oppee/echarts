<?php
namespace HQ\Controller;
/**
 * @author HeQi
 * @Email info@heqi.hk
 */
class UserController extends BaseController {

    //模型配置, 1. label, 2. tips 3. type, 4. data source, 5. special logic
    private $tca = array();
    public $tbName = CONTROLLER_NAME;  //MODULE_NAME
    public $image_path = '';
    //高级筛选
    public $status_all = array(
        array('status'=>'hidden', 'value'=>0, 'title'=>'显示', 'class'=>'success'),
        array('status'=>'hidden', 'value'=>1, 'title'=>'隐藏', 'class'=>'inverse')
    );

    protected function init() {
        //高级筛选
        $this->assign('status_all', $this->status_all);
        
        if (ACTION_NAME == 'edit') {
            $id = $this->_get('id');
            $crdate = M($this->tbName)->where('id = ' . $id)->getField('crdate');
            //图片路径
            $this->image_path = CONTROLLER_NAME . '/source/' . date('Ym', $crdate) . '/';
        }
        
        $level = M('user_level')->field('id as "0",name as "1"')->select();
		$this->assign('level',$level);
        //$recommend_id = M($this->tbName)->field('id as "0",concat_ws("-",user_number,username) as "1"')->select();
		//$this->assign('recommend_id',$recommend_id);
		
		
        //Demo状态下仅标题字段存在于数据库, 其它字段为示例
        $this->tca = array(
            /*'hidden' => array(
                'label' => '是否显示',
                'type' => 'toggle_button',
                'data' => '0' //checkbox value
            ),
            'is_approval' => array(
                'label' => '审核状态',
                'type' => 'radio',
                //'required' => true,
				'default' => 1,
				'data' => array(array(0,'待审'),array(1,'通过'),array(2,'失败'))
            ),		
			'is_agb' => array(
                'label' => '签约状态',
                'type' => 'radio',
                //'required' => true,
				'default' => 1,
				'data' => array(array(0,'未签'),array(1,'已签'))
            ),	*/
        	'image' => array(
        		'label' => '头像',
        		'type' => 'image'
        	),
            'username' => array(
                'label' => '用户名',
                'type' => 'text',
                'required' => true
            ),
            'mobile' => array(
                'label' => '手机号',
                'type' => 'text',
				'required' => true
            ),
            
            /*'password' => array(
                'label' => '登录密码',
                'type' => 'password',
				'help' => '如果不修改密码，此项不需修改',
            ),

			'level' => array(
				'label' => '会员等级',
				'type' => 'radio',
				'required' => true,
				'default' => 1,
				'data' => $level
			),*/
			
			/*'company' => array(
                'label' => '公司名称',
                'type' => 'text',
            ),
            'name' => array(
                'label' => '联系人',
                'type' => 'text'
            ),	
			'tel' => array(
                'label' => '联系电话',
                'type' => 'text',
            ),*/
            'nickname' => array(
                'label' => '昵称',
                'type' => 'text'
            ),
            'merchant_name' => array(
                'label' => '客户名',
                'type' => 'text'
            ),
            'gender' => array(
                'label' => '性别',
                'type' => 'radio',
                'default' => '0',
                'data' => array(array("0","未知"),array("1","男"),array("2","女"))
            ),						
        	 
            /*'openid' => array(
                'label' => '微信号',
                'type' => 'text',
            ),

            'email' => array(
                'label' => '电子邮箱',
                'type' => 'text',
            ),*/
/*            
			
            'remark' => array(
                'label' => '会员备注',
                'type' => 'textarea'
            )*/
        );
    }

    /*
     * 列表页面
     */

    public function index() {
        $this->init(); //加载初始化数据
        $Obj = D($this->tbName); //实例化对象
        $Where = "deleted=0";
        //高级搜索 数据状态
        /* $Where_status = ' and ( ';
        $Where_status_info = '';
        foreach($this->status_all as $k=>$v){
            if(I('request.'.$v['status'])!=''){
                $I_status = I('request.'.$v['status']);
                if(in_array($v['value'], $I_status)){
                    $Where_status_info .= " or `".$v['status']."`='".$v['value']."' ";
                }
            }
        }
        if($Where_status_info==''){
            unset($Where_status);
        }else{
            $Where_status .= substr($Where_status_info, 3).' ) ';
            $Where .= $Where_status;
        }
        if (I('request.recommend_id')!='') {
            $Where .= " and recommend_id = '".I('request.recommend_id')."'";
        }
        if (I('request.level')!='') {
            $Where .= " and level = '".I('request.level')."'";
        }

        // 注册开始日期--结束日期
        if(I('get.starttime')){
            $Where .=' and (crdate >= ' . strtotime($_GET['starttime']) . ')';
        }
        if(I('get.endtime')){
            $Where .=' and (crdate < ' . strtotime($_GET['endtime'] . ' 23:59:59') . ')';
        }
				
        if (I('request.keyword')!='') {
            $I_keyword = trim(I('request.keyword'));
            $Where .= " and (id like '%" . $I_keyword . "%' or username = " . $I_keyword . "  or mobile = " . $I_keyword . ")";
        } */
        
        //用户名
        if (I('request.username')!='') {
        	$I_username = trim(I('request.username'));
        	$Where .= " and username = " . $I_username;
        }
        //手机号
    	if (I('request.mobile')!='') {
        	$I_mobile = trim(I('request.mobile'));
        	$Where .= " and mobile = " . $I_mobile;
        }
        
        //控制分页显示条数
        if(I('post.limit_num')!=''){
            session('page_limit_num', I('post.limit_num'));
        }
        //控制列表排序
        $sorting = I('get.sorting') ? I('get.sorting') : 'id';
        $order = I('get.order') ? I('get.order') : 'desc';
        $limit_num = $_SESSION['page_limit_num'] ? $_SESSION['page_limit_num'] : 10;
        $Page = new \HQ\Util\Page($Obj->where($Where)->count(), $limit_num); // 实例化分页类 传入总记录数和每页显示的记录数
        $list = $Obj->where($Where)->order($sorting.' '.$order)->limit($Page->firstRow . ',' . $Page->listRows)->select();
		foreach ($list as $k=>&$v){
			$is_set = M('user_store')->where(array("hidden"=>0,"deleted"=>0,"users"=>$v["id"]))->find();
			if($is_set){
				$v['can_del'] = 0;
			}else{
				$v['can_del'] = 1;
			}
		}
        
        $this->assign('list', $list); // 赋值数据集
        $this->assign('page', $Page->show()); // 分页显示输出
        $this->display(); // 输出模板
    }

    /**
     * 编辑数据
     */
    public function edit() {
        $this->save();
    }

    /**
     * 保存数据
     */
    public function save() {
        $this->init();
        //编辑数据
        $id = I('request.id') ? I('request.id') : null;
        $info = M($this->tbName)->where('id = ' . $id)->find();
		
       /* if(!empty($info['recommend_id'])){
        	$recommend_id = M($this->tbName)->where(array('id'=>$info['recommend_id']))->field('concat_ws("-",user_number,username) as "1"')->find();
        	$info['recommend_id'] = !empty($recommend_id) ? $recommend_id['1'] : '';
        }*/
		
        if (IS_POST) {
            if ($_POST['password'] != $info['password'] && !empty($_POST['password'])){
                //$_POST['password'] = $this->encryption($_POST['password']);
				$_POST['password'] =md5(base64_encode($_POST['password']));
				
            } else {
                unset($_POST['password']);
            }
			//处理地区选择
        	$_POST['province']=$_POST['chinaprovinces_province'];
        	$_POST['city']=$_POST['chinaprovinces_city'];
			$_POST['area']=$_POST['chinaprovinces_area'];
            //日期处理
            $_POST['birthday']=!empty($_POST['birthday'])?strtotime($_POST['birthday']):'';
            foreach ($_POST as $key => $val) {
                //处理POST数据
                if (is_array($val)) {
                    $_POST[$key] = implode(",", $val);
                }
                if (@$this->tca[$key]['required'] && !$val) {
                    $this->error($this->tca[$key]['label'] . '是必填项!');
                }
            }

            //删除文件 begin **********************************
            $path = $this->Config['path_upload'] . CONTROLLER_NAME . '/';
            if ($info && $info['image'] && $_POST['delete_image'] == '1') {
                $file_path = $path . 'source/' . date('Ym', $info['crdate']) . '/';
                $this->delInfoFile($file_path, $info['image']);
            } else {
                unset($_POST['image']);
            }
            //删除文件 end **********************************
            //文件上传 begin **********************************
            if (count($_FILES) && isset($_FILES['image'])) {
                $save_path = 'source/'; // 设置附件上传目录
                $extent_path = ($info['crdate'] ? date('Ym', $info['crdate']) : date('Ym')) . '/';

                $upload = $this->uploadFile('image', $path, $save_path, $extent_path);

                if (is_array($upload) && $upload['upload']) {
                    $_POST['image'] = $upload['info'];
                } else {
                    $this->error($upload['info']);
                }
            }
            //文件上传 end **********************************

            $Obj = D($this->tbName);
            $result = $Obj->create();
            if (!$result) {
                $this->error($Obj->getError());
            } else {
                if (!isset($_POST['hidden'])) {
                    $Obj->hidden = 0;
                }
                if (!isset($_POST['top'])) {
                    $Obj->top = 0;
                }

                $Obj->tstamp = time();
                if ($id) {
                    $Obj->where(array('id' => $id))->save();
                    $message = '编辑成功!';
                } else {
                    $Obj->crdate = time();
                    $id = $Obj->add();
                    if (trim($_POST['sorting']) == '') {
                        $number = format_num($id, 8, 'S');
                        $Obj->where(array('id' => $id))->save(array('sorting' => $id, 'number'=>$number));
                    }
                    $message = '添加成功!';
                }

                $this->success($message, U(CONTROLLER_NAME . '/index', 'kept=1'));
                exit;
            }
        }
		//地区赋值的几个变量
		$dq=array(
			'province'=>$info['province'],
			'city'=>$info['city'],
			'area'=>$info['area'],
		);
		$this->assign("dq",$dq);
        //自动渲染字段
        parent::autoFields($this->tca, $info);
        $this->display('info');
    }
    
	//查看
    public function view(){
    	$id = I("id");
    	$info = M("user")->where(array("id"=>$id))->find();
    	
    	$this->assign("info",$info);
    	
    	$this->display();
    }
    
    //重置密码
    public function resetPassword(){
    	$id = I("id");
    	$info = M("user")->where(array("id"=>$id))->find();
    	$code = substr($info["mobile"], -6);
    	
    	//重置密码并发送给用户
    	M("user")->where(array("id"=>$id))->save(array("password"=>$code));
    	
    	$sms_code = "SMS_13181156";
    	$SmsParam = "{\"code\":\"{$code}\"}";
    	
    	$res_obj = sendSMS($info["mobile"], $code, $sms_code,$SmsParam);//返回对象
    	$res_array = object_to_array($res_obj);
    	if($res_array['result']['success'] == true){
    		cookie('code',$code,180);
    		//$this->success("发送成功！");
    		$this->ajaxReturn(array("status"=>1),json);
    	}else{
    		//$this->error("发送失败！");
    		$this->ajaxReturn(array("status"=>0),json);
    	}
    	 
    }
    

}

?>