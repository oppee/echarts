<?php
namespace HQ\Controller;
/**
 *
 * @author HeQi, info@heqi.hk
 */
class UserinvoiceController extends BaseController
{

    //模型配置, 1. label, 2. tips 3. type, 4. data source, 5. special logic
    private $tca = array();
    public $tbName = 'user_invoice';		//MODULE_NAME
    //高级筛选
    public $status_all = array(
        array('status'=>'hidden', 'value'=>0, 'title'=>'显示', 'class'=>'success'),
        array('status'=>'hidden', 'value'=>1, 'title'=>'隐藏', 'class'=>'inverse')
    );
    
    //普通
    const INVOICE_TYPE_NORMAL = 0;
    //专用
    const INVOICE_TYPE_SPECIAL = 1;

    protected function init()
    { 
        //高级筛选
        $this->assign('status_all', $this->status_all);
        $id = I('request.id') ? I('request.id') : null;
		if ($id) {
			$user_id = M($this->tbName)->where(array('deleted' => 0, 'id' => $id))->getField('user_id');
			$users = M('User')->where(array('deleted' => 0, 'hidden' => 0))->order('id desc')->field('id as "0",concat_ws(".",id,name,company) as "1"')->select();
			//$users = M('User')->where(array('deleted' => 0,'hidden' => 0,'id' => $user_id))->order('id desc')->field('id as "0",concat_ws(".",id,name,company) as "1"')->select();
       		$this->assign('users', $users);
			
		} else {
			$users = M('User')->where(array('deleted' => 0, 'hidden' => 0))->order('id desc')->field('id as "0",concat_ws(".",id,name,company) as "1"')->select();
       		$this->assign('users', $users);
		}
		
		$this->assign("invoice_normal",self::INVOICE_TYPE_NORMAL);
		$this->assign("invoice_special",self::INVOICE_TYPE_SPECIAL);

        $this->tca = array(
            'hidden' => array(
                'label' => '显示',
                'type' => 'toggle_button',
                'data' => '0' //checkbox value
            ),
            'user_id' => array(
                'label' => '所属公司',
                'type' => 'select',
                'data' => $users
            ),
           
           'types' => array(
				'label' => '发票类型',
				'type' => 'radio',
				'required' => true,
				'default' => 0,
				'data' => array(array(self::INVOICE_TYPE_NORMAL,'增值税普通发票'),array(self::INVOICE_TYPE_SPECIAL,'增值税专用发票'))
			),
			 'title' => array(
                'label' => '发票抬头',
                'type' => 'text',
                'required' => true
            ),
            'tax_number' => array(
                'label' => '公司税号',
                'type' => 'text'
            ),
			'bank_name' => array(
				'label' => '开户银行',
				'type' => 'text'
			),
			'bank_card' => array(
				'label' => '银行账号',
				'type' => 'text'
			),
			'tel' => array(
				'label' => '联系电话',
				'type' => 'text'
			),
			'address' => array(
				'label' => '联系地址',
				'type' => 'text'
			),			
			
        );
    }

  /*
     * 列表页面
     */
    public function index()
    {
        $this->init();	//加载初始化数据
        $Obj = D($this->tbName.' a'); //实例化对象
        $Where = "a.deleted=0";
        //高级搜索 数据状态
        $Where_status = ' and ( ';
        $Where_status_info = '';
        foreach($this->status_all as $k=>$v){
            if(I('request.'.$v['status'])!=''){
                $I_status = I('request.'.$v['status']);
                if(in_array($v['value'], $I_status)){
                    $Where_status_info .= " or a.`".$v['status']."`='".$v['value']."' ";
                }
            }
        }
        if($Where_status_info==''){
            unset($Where_status);
        }else{
            $Where_status .= substr($Where_status_info, 3).' ) ';
            $Where .= $Where_status;
        }
        if (I('request.keyword')!='') {
            $I_keyword = trim(I('request.keyword'));
            $Where .= " and (a.id like '%" . $I_keyword . "%' or a.name like '%" . $I_keyword . "%' or u.company like '%" . $I_keyword . "%' or a.mobile like '%" . $I_keyword . "%')";
        }
        //控制分页显示条数
        if(I('post.limit_num')!=''){
            session('page_limit_num', I('post.limit_num'));
        }
        //控制列表排序
        $sorting = I('get.sorting') ? I('get.sorting') : 'id';
        $order = I('get.order') ? I('get.order') : 'desc';
        $limit_num = $_SESSION['page_limit_num'] ? $_SESSION['page_limit_num'] : 10;
        $Page = new \HQ\Util\Page($Obj->join(C('DB_PREFIX').'user u ON u.id = a.user_id')->where($Where)->count(), $limit_num); // 实例化分页类 传入总记录数和每页显示的记录数
        $list = $Obj->join(C('DB_PREFIX').'user u ON u.id = a.user_id')
                    ->field('a.*,u.company as user')
                    ->where($Where)->order('a.id desc')
                    ->limit($Page->firstRow . ',' . $Page->listRows)
                    ->order('a.'.$sorting.' '.$order)
                    ->select();
        $this->assign('list', $list); // 赋值数据集
        $this->assign('page', $Page->show()); // 分页显示输出
        $this->display(); // 输出模板
    }

    /**
     * 编辑数据
     */
    public function edit() {
        $this->save();
    }
    /**
     * 保存数据
     */
    public function save() {
    	$this->init();
        //编辑数据
        $id = I('request.id') ? I('request.id') : null;
        $info = M($this->tbName)->where('id = ' . $id)->find();

        if (IS_POST) {
						
            foreach ($_POST as $key => $val) {
                //处理POST数据
                if (is_array($val)) {
                    $_POST[$key] = implode(",", $val);
                }
                if($key == 'types'){}
                else if (@$this->tca[$key]['required'] && !$val) {
                    $this->error($this->tca[$key]['label'] . '是必填项!');
                }
            }
           
 
            $Obj = D($this->tbName);
            $result = $Obj->create();
            if (!$result) {
                $this->error($Obj->getError());
            } else {
                if (!isset($_POST['hidden'])) {
                	$Obj->hidden = 1;
                }
				 
                $Obj->tstamp = time();
                if ($id) {
                    $Obj->where(array('id' => $id))->save();
                    $message = '编辑成功!';
                } else {
                    $Obj->crdate = time();

                    $id = $Obj->add();
                    if (trim($_POST['sorting']) == '') {
                        $Obj->where(array('id' => $id))->save(array('sorting' => $id));
                    }
                    $message = '添加成功!';
                }
                $this->success($message, U(CONTROLLER_NAME . '/index', 'kept=1'));
                exit;
            }
        }
 
        //自动渲染字段
				//dump($info);
        parent::autoFields($this->tca, $info);
        $this->display('info');
    }

}

?>