<?php

class RSA {
	
	private $public_key;
	
	public function __construct() {
		$this->public_key = C("PUBLIC_KEY");
	}
	
	/**
	 * RSA解密
	 */
	public function decrypt($jsonstr) {
		
		if(empty($jsonstr)){
			$return_data = $this->Status('10001');
			$this->ajaxReturn($return_data,JSON);
			die;
		}
		
		$json_map = json_decode($jsonstr,true);
		$RSAdecrypt = $json_map['RSAdecrypt'];
		$MD5encrypt = $json_map['MD5encrypt'];
		$data = $json_map['data'];
		
		if(empty($data)){
			$return_data = $this->Status('10001');
			$this->ajaxReturn($return_data,JSON);
			die;
		}
		
		$data_str = "";
		
		if($RSAdecrypt == 1){
			$pu_key = openssl_pkey_get_public($this->public_key);
			openssl_public_decrypt(base64_decode($data),$data_str,$this->public_key);
		}else{
			$data_str = $data;
		}
		$rs['MD5encrypt'] = $MD5encrypt;
		$rs['data_str'] = $data_str;
		
		return $rs;
	}
	
	
	
	
	
	
	/**
	 * 输出错误类型及说明
	 * @param integer $code  状态码
	 * @param text $t  输出HTTP状态信息
	 */
	public function Status($code,$t = ''){
		if($t=='E')$this->send_http_status('422');
		else $this->send_http_status('200');
		switch($code){
			case '10001';
			return array(
					'code'=>'10001',
					'message'=>'Invalid Parame'
			);
			break;
			case '10002';
			return array(
					'code'=>'10002',
					'message'=>'Md5 Check Error'
			);
			break;
			case '10003';
			return array(
					'code'=>'10003',
					'message'=>'Send SMS Error'
			);
			break;
			default :
				return array(
				'code'=>'0',
				'message'=>'Send SMS Success'
				);
				break;
		}
	}
	
	/**
	 * 输出常见HTTP状态信息
	 * @author wanghuan
	 *
	 * @param integer $code 状态码
	 */
	public function send_http_status($code) {
		$status = array(
				'200' => 'OK',
				'301' => 'Moved Permanently',
				'302' => 'Moved Temporarily ',
				'400' => 'Bad Request',
				'401' => 'Unauthorized',
				'403' => 'Forbidden',
				'404' => 'Not Found',
				'422' => 'Unprocessible Entity',
				'500' => 'Internal Server Error',
				'503' => 'Service Unavailable',
		);
		$str = isset($status[$code]) ? (' ' . $status[$code]) : '';
		return header("HTTP/1.1 $code$str");
	}
	
	/**
	 * Ajax方式返回数据到客户端
	 * @access protected
	 * @param mixed $data 要返回的数据
	 * @param String $type AJAX返回数据格式
	 * @return void
	 */
	public function ajaxReturn($data,$type='') {
		if(empty($type)) $type  =   C('DEFAULT_AJAX_RETURN');
		switch (strtoupper($type)){
			case 'JSON' :
				// 返回JSON数据格式到客户端 包含状态信息
				header('Content-Type:application/json; charset=utf-8');
				exit(json_encode($data));
			case 'XML'  :
				// 返回xml格式数据
				header('Content-Type:text/xml; charset=utf-8');
				exit(xml_encode($data));
			case 'JSONP':
				// 返回JSON数据格式到客户端 包含状态信息
				header('Content-Type:application/json; charset=utf-8');
				$handler  =   isset($_GET[C('VAR_JSONP_HANDLER')]) ? $_GET[C('VAR_JSONP_HANDLER')] : C('DEFAULT_JSONP_HANDLER');
				exit($handler.'('.json_encode($data).');');
			case 'EVAL' :
				// 返回可执行的js脚本
				header('Content-Type:text/html; charset=utf-8');
				exit($data);
		}
	}
	
	
	
}